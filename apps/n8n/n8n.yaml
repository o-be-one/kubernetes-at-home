apiVersion: v1
kind: Namespace
metadata:
  name: n8n
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: n8n-pvc
  labels:
    recurring-job-group.longhorn.io/auto-backup: enabled
    recurring-job-group.longhorn.io/auto-snapshot: enabled
    backup-frequency: high
    snapshot-frequency: high
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: n8n
spec:
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: n8n-pvc
      initContainers:
      - name: volume-permissions
        image: busybox:1.37
        command: ["sh", "-c", "mkdir -p /data/.cache /data/.n8n && chown -R 1000:1000 /data && chmod 600 /data/.n8n/config || true"]
        volumeMounts:
          - name: data
            mountPath: /data
      containers:
      - name: n8n
        image: docker.n8n.io/n8nio/n8n:1.92.2
        envFrom:
        - secretRef:
            name: n8n-secret
        env:
        - name: TZ
          value: America/Montreal
        - name: N8N_BASIC_AUTH_ACTIVE
          value: "true"
        - name: N8N_PORT
          value: "5678"
        - name: N8N_PROTOCOL
          value: "https"
        - name: NODE_ENV
          value: "production"
        - name: WEBHOOK_URL
          value: "https://n8n.btrcloud.com/"
        ports:
        - name: http
          containerPort: 5678
        volumeMounts:
        - name: data
          mountPath: /home/node
        resources:
          requests:
            memory: "250Mi"
            cpu: "100m"
          limits:
            memory: "500Mi"
            cpu: "300m"
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
          runAsUser: 1000
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: n8n
spec:
  ports:
  - name: http
    port: 5678
    targetPort: http
  selector:
    app: n8n