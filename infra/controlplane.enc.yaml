# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:IYQAa5IHwq3DBddZA0WGEdycAyuZ6Ig=,iv:JZO94QxWbfuE3EDo7MYz00nuaigkk0PAnIYQpbBKOS4=,tag:ZhxHuqOv6M8R8X8phpIN5w==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:7cRgj5YPJ7kq9uGEm35ewWngX3GF2JufM+/vfMUNnyUWMozPMTB0QnlQ+DzVpYkbPLPwQ1fhCXhEZxlDbO0W705nezWtEKfJBFz9Zw3MiwUOJDwH9e4KnSjvQh9X029d7XPdnJi3OykwvsMSjQns+6tfQ0WLXkf9f9DRWgnk8U/qh1EoETWoLn20s/lQ3337AcWHrAgY5JJgxLJuqegk+N2g9sYMHYsPAB2M5T/BRBEUhsfGhsNvzp58zPaF60qokOK2fEbjccdjdflR6xKaVdNZnHk9QZwxoNlckKMh2Fj7OGQcnMZZtAcGFx6Uq4E/RknkJzwJs3aRW5dV5i0lx81fPyd8NaLE+qI0eKsu8Jdu0RV+wBov43p7t0DIETW3k5JGWy4uT+iBvzSqckWlMEK6oy3s8KUvISRamiPkQyjFWTNx7q2pP3HyowO/hJGgZ0KXCkki+gKxo3OMmNlPAqbCO82w8mrc05fkcKMa1FkCz96RxdTuBV0fVQPH7BzGuoo5LXOe2IFwfG2tRjoaCUP/TztyszCNAdzWKj4cnVCET6uzrvuIkf5MU/yyszPEdCmle8hOp5Ez5841G7rHOCu1PfbB+vyDP2cWlUgTq02EfBIuKs6iRFcYxEq7AHaBjgU27QdXXo4nAWjzGwfkamRKCw9E0wE5nt20EacHoAYVYDSowgAtv2zJMLhvhVLr1AyN2wvkrjzzKQX0nJ7Pt1H8IAnMBqSFKa7J3SAJng0uANHfYW6ab1zN/w/aM/GzZFigFe6n33edM09AWCVtcQ/HZEehwlNYUa8NJkWTp7slT6HjJDSS8apZbM0ywoCvWjwAW7hc6jHForJhPpizdQHJB90UF3vFYC9q48qBOh8UkGSy,iv:UyFC6Qq36EpKUsu0yo+ZDd8oJ5t2Mr2zhvE8+zqrCls=,tag:1XPAUr+BACmNaQJ5v0JmEg==,type:str]
        key: ENC[AES256_GCM,data:CAMC+wSy3SS4Z0+W1fizj1apfVQQm5X9ccNx/4Srz3eMHh4rVRKTxDJJTMmWeczBueQIe9o6x9edqNnHV12zhjYzBxtOJT6rm0J75Bc8c3tGed0q6hd5sKdLGjt4VO3rwBK7jCSAmq+rL9fRpOFhDAOSitQH6rIeGhI4+s3aYD6zw6h6rQ6+desW4PENGDs7590BGMyMp6b+Kfe+GyltuFU0uLR2atkHgt06XGV5HhLsO58D,iv:29A23WF2PheMROa6Y6EAPzKKQ1Rb0Bx5t4qAUMN5tCw=,tag:/p0j8I+gmipU04fT/fWsMA==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        #image: ghcr.io/siderolabs/kubelet:v1.30.1 # The `image` field is an optional reference to an alternative kubelet image.
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        nodeIP:
            # The `validSubnets` field configures the networks to pick kubelet node IP from.
            validSubnets:
                - 192.168.200.0/24
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw
        extraMounts:
            - destination: /var/lib/longhorn
              type: bind
              source: /var/lib/longhorn
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        # Talos image factory generated link with following extensions:
        # - iscsi-tools
        # - util-linux-tools
        # - gVisor
        # - i915 (required for Intel iGPU -we have n100 for controlplane-, else error DMAR)
        image: factory.talos.dev/installer/4db74588f5f5e0a277cd58181df6bb200b1f98a054b6193b158229d4c3d8d266:v1.9.5
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balacing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # Specifies time (NTP) servers to use for setting the system time.
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: ENC[AES256_GCM,data:CCZB/S+MqIkyRJzYJHDTQ66ROArKAywt5ifpRqfYByp+yo3FrbUq00XpA5A=,iv:IvNbaUErCy3LbfmTNVCDTqcWaa7+tKlpV9ryOSgtaFk=,tag:PwQmLIjvL6RI62TfbhagfQ==,type:str]
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:WwwI8vgYo4+86Z6KGmd1IBC0WAYYh1D3R51EVZvz8XZBAqG2RkNUCocvMes=,iv:zGYjy4HXnH0ERx/6zDFlifB+5GBjzse/kOzqLYXaGpM=,tag:H9Wq7jHZ3hcun3nb5oA2Kw==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://btrkube.menia.cc:6443
    # Configures the cluster's name.
    clusterName: btrkube
    # Provides cluster specific network configuration options.
    network:
        # The CNI used.
        cni:
            # Name of CNI to use.
            name: none
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:Gv3ersFgJayVP9o0uVn9Dtp7T8C1r3Y=,iv:nRIrodIFrwaj2kLAdHmQY2Sdiq1pT6xxuQCpPV74YXM=,tag:S7rUf7lLYxaoVSxcxAgYJA==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: ENC[AES256_GCM,data:ORoo24Oa+tPl2qE9+N1OsjyIuivCONtcxKADAMaSLPrSwEQQ9fs1PY+k01M=,iv:3/3Va6XY6/W0ChT6Ohxs22KlU16lGz732DnTMg4rUA8=,tag:bZTQW9zL0W58E2rjkDMl5A==,type:str]
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:zcDGdWEOERo6mRR+jaot83LLr25G4FXKK0vT0mHu9wAvYZZ371FA+lVC+M7pLLWv5HrfiaZ89HyGrQPaiU//uuNQBbzlvdWanb9FV4sbq+OGKsqSc+ZArpZKzy9Nur03YP+LBftIc4ZzH1F3EVtncV3/P6jqf2HAfIvUpLR+SnjPfYkP/tepcGJMpOeYSpUqMwrndFgjeUqR+LIxkNTQtKz27syIhirWa+eN35cWhW/bnBQi3t8pgyK3TVkjVuspxKTzgaDcqsrmHnU/bax9DY2gEmpBclJL6cH5s/3f9Pa/KtjGth0ft2hNIDfjo2UqBLFIs77Nl0Qed6bXweitnLbYW9yQyBNYCqL0NYT3w6+OQnr666j6UllHAGlOu+UKupucZJ03RX0SQf0DYEK/8+AYzsoILpDvmfjFFMPJ3n8zaSbkx+WK658sXm98D0Drx9hU4CH+Mdya1K9wafy5Fe2O8ckhZ9oQa6QRKa+aSjoNX7bjBoAb/7B/RrUgETXuVn5JqyzQmgO0SCdIVaRMCVBlrHL8QBQXHzkcCSPdzDX/bcrLAuwSjlRmwdvI4ZxdfkpuML8P1cDdecb21cHP402gUx7Nq4xhx1/qFrHMrRwbgsZWFgLgfNEb/mYasRqeAqG8hNXOlveZiKO4nHTCG2ocANotZduYuat4TOXTRGFNeuqNjTsRFC3HKHC7J9J0FKPuHtda+lQAxGwHvgAinj+tpHvdR+JzIcH2uNo5AyzZCvv+NxgAzx0E2IGCfB3sFGFft/5P+3tyZPDWBY0PgTGuZqIY2owJSc/bbut/bsGTPsdBSvMwQJ+fEhqSBwlRzm3Xg3ifk8eR4QO+XF1n8ik1zo8tvdxt4Obnn9qedV5/YBNv0KoNUPm0JsR0XY9r/vnWK/ld/u9vW59rN5F2eBCM+6/5SUkXz9j7aS5gHMqYLHaWzqhS2fP6vvjCc3onp2mndKyt+O8luaaA4LUFTpvV5r2/CBs2RVkXZW9c5wL1eZTQ5hsxxUBKhhh3wddfxW4A4KbnQpcYsurciH6bJMxSA+hSCnKbLBjQNQ==,iv:TTohRoMEld6rcU1pSzU+afqycazH2pqwWVGlspHJOyI=,tag:XbcayU/kKPyy6wt1euUveg==,type:str]
        key: ENC[AES256_GCM,data:EYaj9LbahH23Pxs/H/iGgWtytNi8CiGW+N9bbMBIzyhr8NJPb7x/Yvx8s/EH1R9+6cOj57PQQM6IYsLHWkwT8SSS0IW1/tPafWXyjphxO8Zyu5zk1WWoABKl9PSJTNFwPL9c/6l3HOunfQ8lBGTa8ZbymAc4YhI0PL4VoMrVbGctcfkxV8dg4WA+iYReF6Mq2o9y9e8gqgJsVSp4Py1fGr3jV3wzuPMiSRX5BYBZJDbfvj/giRsAZLxV0Ft6vwhpcz/6osSmQxQBzSHty+8COVsSfa2JNjvLULn42j1FHuReBY5YZ5g7OEQ//Jsz0JxNRAEz3IGaJkBFcvCqNUhvyrSx3Wf0f6/VnsFqPxRaS+AETUtthVCtZiRvvQDfEHkEo8g93lj6Eho0zHjctJt8Sg==,iv:1UAfxPVy9Fs/9ZIM4to1I2PI/e6t1ChvlIAVkYwNPws=,tag:Gakewq6/KvDV9RQUhHSivA==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:zxqb6j/L/5y7qdmFz+a/apd30onu9BUemLV402vrD3TDxYnY8fDWZLSBItQFljMdOUj+hHoXoPNJBSshi55bjTr3pSR+eXLVmf/OvQsoRi3DbR47H+QXyLith8EbDxhrAfTaRHY7JBAML+h9oljMPf/zZUUWkqzo2mBAIZ9Jzv4LIkzpmxHLLfveDV3UeRZzJmnR6y/A6p3mRHrpKxZb0a5JnN7nyGfRR20Esdf8qYQ4nFGWLwHQHOVbqEVtp0JfaMdrMPA6w992t5wfel0FZTISjEfoUu5GlS6IRwGK/VJJq48cQR7BaI+mistTcEHBBLXdE01JM4r972coeCP0mKhgcPDKFvGH5Cf6rMtu9KQj/F+JMCNNM5hLAzqN2mspWVWTs7hnQyS4Oylyrv1yeNBpxnGVJcjtdzsWV+4mwUHYmAFi3er2BqWTbJFTfPZsisNkebGKW07V8Qr2LYAMNU3IqJf4ZfkvCK/hJj350Sy6hNASnktdhPaRXaGytvlRY15u9dFwxlIbZNpMJDZ2da++Dnx3UuDtkY9C4FTSPNN/sOK2s1c95SLPAFyI6sv8SFB0iR7ReTpXaoJtnlat0h5q8hDyi7UQpreIjrww28iGflRsMgpJMT5awYuaQzQBihlxuoInaTwr3FdKRBmUkbpOghDAlcfY9ej/MlAiOkwM57PPJynK6KkB/Wki6BcBqEV9aHx+qNSZskvOK1ekQ46DApO+TieR8Dw5aP/ps+CJfwb2YOGlEjHur9Y9di1FGGS+ByM5V8zEPcz7ABRVK/uryzVmHThpUm6W5LFyodV+YvH5ZpRsYTz/lLM0Rn+NZBx49A0W2bUm96BB9RARnKdthDlQ+UAk3RQG1HphCfM/StAbx/kZVXP+CdUsiQTmce0uwPlEuGlrBoQh5U2xAd7DkA6YVGh5IoZvoGpQW5SsoHl24hYhfnYuYRdnqq2e,iv:C6N3enONX0y30xupdhZ/ZfUPTzO7fgnUpEo6qpGHeFg=,tag:JybdENFrhwz9haKuhOS7BA==,type:str]
        key: ENC[AES256_GCM,data:787aJWBuaecyWTIv19TLmsqPnWJkbJl36+47bRlTgNWNZb8akRKF4d9ys/aRQiBeyZGt4Nl8np0T1REE2ea/Z1u816ZQXlhADsiWac6M3WMrYXuHF/4EPSfBofIRxlMZVd665gqwe/UELa2Y2HyLh/3C/71qphmkIYd16toF8P2CtRmm4rAjG0nsSLSV0lJ+G2EcyIteF9wjqwGbCR8XqTJO43wd0AHumTaVMqKaeOwMXw1BT3+5dcmiitQM16fOoQ2aKdr7KxXlT6+7s2Fo21/N6gMldztKvn7FxQCAdFwv2SJAuknmc3GaH9xhqLtA4flOKO/8ud+UVGxWF8tCzf9Ecw+wAXIhPmQW1kBS3xqk+8wLh3mXIZW1xYOV/cwqLGNEvl3vMEuMw4fQvGEHpQ==,iv:06HtwHmlFrP88gWe4MP95tyy6i213WeqdTT+aYYbLu8=,tag:eyUtyevEiNCGKuxFEAcXuw==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data:pffE8oB+H5TQ/gQdQGhrZQXQ7VZKuhCph/sOXq6ha3Tx1sH1jZ4Sa0t5H0uXayMq0ELPmsJnd04Zai1yp7ztYO2Uyygjuf90WFj/Q0T6ldHDAC74RYcvzYM0gWDXzOBRox2FbAOeL7cI+fK3pg8McLqPBmIwhillybVnt2WVBFD0jgGpBeWJCNdqsvqerGTdvEQHZEbBPeBuAPsaytheYCzfRMxQak9Et8pZ94UqDF447l07VIVQ4EYyjHOvncQhM1N0J9f1gN4KaeEnuHZM2/6aJZaRxa19OfcqqT3pl/Rd4nxN46JQq7DAqTzGQKbR0xt92L3kyWVxctkRnbs/D6f/MSZUMtr/ny4OUNoT8gwEKeCj8+9kFQWCaPZdqpv/kQ3DywM4d2lQ1QII+81hQA==,iv:T15BGN4R8AgOJ6j3dcJDpYOmZuAtVORQHt6xhukvarM=,tag:+O45LsGtsrB0mfqGMQlG2Q==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.1
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - btrkube.menia.cc
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.1
    # Kube-proxy server-specific configuration options
    proxy:
        # Disable kube-proxy deployment on cluster bootstrap.
        disabled: true
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.1
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.1
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:/rAbRrzbj51iPDJLT2DQ3keTRnyBE7FnRXl2UeqKE38ClekDBB/YMzYrSzLbHKFU85q882pegx8yQ0B6eJEypvoj7E6h2SHtZLQeTTUEloSYWq1ablsUa2JmXPFVjkfmGcAtBDbyEO1Vz+AfmylETvW8wqX/bgsZr5t0YrtorNZrBrM/NPA0fDiNg75d3Acnfy6Xl2uPyOeJ1FLWiPDuAwFJJWy9DK9ptCuCHWWIMCQiecqJrN9vcZzy4rd6YscwGq2XTt1+sDQjs3Sya8UnWmqI+Qdmqxu2IedrebDa/WkyGHe2PTlgVZBUOavFnLV5CyuKJrwl01/dUf9VgFqGUkRVsiWsjZlTc250jEp8Svvc3GH2nbez1j7Zu1/O1w81b/hollXS0sbfK2FnrafKFDEXNDtaU6oWIxwZWKF+LKqlZPnEc1Xjka45uQHRdqys2V5Z91GS4kvrVFZtqy7G1b8MOz6h6F8NpW0c/Zv6NiJOCznfWlr0rX5mkr2HhbUpLkYw/v8qOgWt2S6fe3/4ThSAlsOkYBtH/O1wtrsOWBYmx4VcRcvbEdvtOCpnBvjNO+lJrTgwa7SVDw2BgQ9LEPF2w6omJlWjIqnNwKegTY0p0kr2RSPEFfzVC1yhMQ8ahOFEBtBkHb49MujEUWDKGlTzWLsop9BtyNECPUD343nF79YmTW37VGITEjbrSVZIYlVyhq6LgNaaKmC4j/nRomq0AXduLIVoMZJ+GKfloQqR4Id6irab9ql7fOA4rMPsunQM4l/Oj8/3q21Vlu7vz7S0SY9uMrFsQ8PSLf8JsnkAj9JGBUPkdiR6oCO2SaAdTmMcVoE0ek2/sotzEQcEB1FMA3nNDDvKPjnE+Om3db8qUS0McCJCJ8bhnY/CVArSvz2hsQ8sm4a3z7zINJdGOt6MkGyWxXqiv/ZviuuI5abOjt8LOsyN41rW8bBMqZoYlI/BV7jIBKzl5Pc1GqceYryf4koAwonO5owVR0lb/WQv7wyE/7OT/nf31GeZ0aXaDX6UbA==,iv:TI5U7z9Cz9q7vKBS2p6acg0Ui+ibd+eJH2nmEST4+mE=,tag:vLEKkKv5G5SeAvZgDIaITg==,type:str]
            key: ENC[AES256_GCM,data:jlNYP+heHa9aPEWa3J/Pkvtk14wsR5kbIiMR4uowKy8/kSpPNhzBLm2mOA570Uln4pcXFbBNzdu+LDdjRCV73PPOqbAk9a0b1cEF0LCS3o7anAV6Aq/9MJ6q/O3jN1LSdI/93Glt06TaFjCW3MAlmsnTKyyCpzpUVvTRVTVoqeB9V8O25mot3C8NeVl9rnRkuTLEAMGlJ7XfC9Z4IBlDmEq1J2yPUm0SY0xBG5VZMocywMlNgbsam1J0drWsqhrUrGQg1kNW2MouQoU9cFCp2E/odpfH02gchRThRFFpVYlKbw85vqiOaUJly9Pg0gt7lg9JdZC+EcR8GLH9T/22HMTsAFeCqYrLSze7wYFXZeSQ1uoW7X5jCWNghRUdkROIjBNFEAD6xhhewsWACXidqA==,iv:ebpxpXvjhe2LViSbjUmGvsqCi1j9rfZiF8pC/4WHlBY=,tag:i2Coa+FK1wS6vmyORdqS+w==,type:str]
            #ENC[AES256_GCM,data:M6kQ/51/w6GZmZeAHtX4Pqes7hkcDPSUD1bBGHww6Pvo7gRNm9ue8y3t7mhamIVwg1kbaXTVHg==,iv:BFxG4P34sbtZalr1hlRZhUnOc/8nT7OI7SpP6uOk2kY=,tag:tqSBdAdU7Y6iskA5E1A0DQ==,type:comment]
            #ENC[AES256_GCM,data:hTUMrF6W9bOK2qlpf2FraZ/2+DnkpdnfHzRY/clRXIm1lKDx+5jZs66m3EfYHTb5oro=,iv:SheZ97zE3DkhOulqRthJJ3VT3rtO9jX2RyDKKl6BuXw=,tag:6BB3buEJCTAqougMcLQW/g==,type:comment]
            #ENC[AES256_GCM,data:/heSbHx+yrzBEAZiyu8cvEySTEkW0cO21NAuFT63yImf7o+0jJGJZ1U52ZyMK6DxiQKEgNOwshmIw+H2O8OhgLgDfcp21Va0tGTMnaRuPJmmZyWzt52O5GE=,iv:T/Gvr2XtzoggHSp+NQny8oYasoYCnFiuHA61EJA4IxY=,tag:CQTeG44cxpCiYbjxztDNyg==,type:comment]
            #ENC[AES256_GCM,data:3xhJxGPDT6GUNOW9VxoL/FgbZg==,iv:r5gI4h4rcMiChfrexM2V7+NEuypoWO6MTzsy59ZkKYA=,tag:Gg13vqVBeTijEUl71CCDVg==,type:comment]
            #ENC[AES256_GCM,data:m9nPioWdVbDbRqWXgw4CX40=,iv:Y1g/aUYEHJMq94JZLY2IDWn9ntoZpM+sapK9bfCQeWY=,tag:dOwO4ZVtmQDwbDjg4wJlSQ==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
# # Decryption secret example (do not use in production!).
# aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
# # Core DNS specific configuration options.
# coreDNS:
#     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
# # Allows running workload on control-plane nodes.
# allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ngkdczpldhxhx8qchl0v7c9eq06vnc5yea3mhsuy0n20hvyescpqv3w2xy
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBJWTA4bmFxQlJwMXlsWDh4
            VE1RcEFWSEFXdElrN1BIdDRZd1pCaXlSazEwCm16K0h4QVJNVVlETUczeFdad2NJ
            UFVJZWJFNGZCaTY2UlB6YWdDTzRrckkKLS0tIGxXekh1ZVJCUG5zdlNDUmFlcXNu
            dGtQbm1URjNRT3p4MFR5dHlWaGNkY3cKMwbhZUSboiJUL8gCQF2Ws7YwNOK1/ZJE
            0Dqnf/14qTPUAQ0+cTcKPPjSaZxu5zqHHjazp0JxmWMP3kwHt9nddA==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1xzxw8fsvdz53aa3r8z6t4zns2cqadjm4ep88w5jf4zw3yhcflvesxgkxlc
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSArUStxaloyYjVYQU5kZ2dU
            TUI4UHVyTW45NnpOQ29mVkFLSTd5TFNyNVFNCk9EM000aGtQN1NhZ3hsdU9vMTB5
            ZXBHVmlsb1NzMENHcXlFK3BzZklhS2MKLS0tIDFPejhNM0dXK0NFaTl1cEZaM3k3
            SEdxYXVlRVA0dXRzYWliOFBtcUtmdkUK8PBn7MvroyEsGGXJPYKQIxvjOZmn4H12
            WDHTndmId/Di4cMl4Rzw7up2/6irl+Bb8A9Odd8VtPnk6ltdYabkfw==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-04-10T20:15:01Z"
    mac: ENC[AES256_GCM,data:aOMlUw4/9oxnkJkiQeweBkh4KWjwrCay+SFxoNqWuu2swx2yl9gp/N5PeUtRi9YW/YLtS6yD38t4cqzk/M8XDuLxG63d6AU1d4tYcqFOtKLaueZG9ho5Yq+gaM9xYjw/geQk8AcInANPOAVv1m4FRE0lV5Hv1tKxADUXAjQxCzc=,iv:L0CHJgOSKi+L4nKr6aRZawRUOmTmIT8AlYJ8ms8s2kE=,tag:3d5yiyk2/lRmm97ubrd3rw==,type:str]
    pgp: []
    encrypted_regex: ^(data|stringData|ca|crt|key|id|secret|token|aggregatorCA|serviceAccount|bootstraptoken|secretboxencryptionsecret|secretboxEncryptionSecret|clientSecret|clientId)$
    version: 3.9.4
